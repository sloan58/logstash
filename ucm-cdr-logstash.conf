input {
  file {
    path => "/home/cdrs/hq-cucm/cdr*"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

filter {
  if ([message] =~ /^INTEGER/) {
      drop{}
  }
    if ([message] =~ /^.cdrRecordType/) {
      drop{}
  }

  csv {
    separator => ","
    skip_header => "true"
    columns => ["cdrRecordType","globalCallID_callManagerId","globalCallID_callId","origLegCallIdentifier","dateTimeOrigination","origNodeId","origSpan","origIpAddr","callingPartyNumber","callingPartyUnicodeLoginUserID","origCause_location","origCause_value","origPrecedenceLevel","origMediaTransportAddress_IP","origMediaTransportAddress_Port","origMediaCap_payloadCapability","origMediaCap_maxFramesPerPacket","origMediaCap_g723BitRate","origVideoCap_Codec","origVideoCap_Bandwidth","origVideoCap_Resolution","origVideoTransportAddress_IP","origVideoTransportAddress_Port","origRSVPAudioStat","origRSVPVideoStat","destLegIdentifier","destNodeId","destSpan","destIpAddr","originalCalledPartyNumber","finalCalledPartyNumber","finalCalledPartyUnicodeLoginUserID","destCause_location","destCause_value","destPrecedenceLevel","destMediaTransportAddress_IP","destMediaTransportAddress_Port","destMediaCap_payloadCapability","destMediaCap_maxFramesPerPacket","destMediaCap_g723BitRate","destVideoCap_Codec","destVideoCap_Bandwidth","destVideoCap_Resolution","destVideoTransportAddress_IP","destVideoTransportAddress_Port","destRSVPAudioStat","destRSVPVideoStat","dateTimeConnect","dateTimeDisconnect","lastRedirectDn","pkid","originalCalledPartyNumberPartition","callingPartyNumberPartition","finalCalledPartyNumberPartition","lastRedirectDnPartition","duration","origDeviceName","destDeviceName","origCallTerminationOnBehalfOf","destCallTerminationOnBehalfOf","origCalledPartyRedirectOnBehalfOf","lastRedirectRedirectOnBehalfOf","origCalledPartyRedirectReason","lastRedirectRedirectReason","destConversationId","globalCallId_ClusterID","joinOnBehalfOf","comment","authCodeDescription","authorizationLevel","clientMatterCode","origDTMFMethod","destDTMFMethod","callSecuredStatus","origConversationId","origMediaCap_Bandwidth","destMediaCap_Bandwidth","authorizationCodeValue","outpulsedCallingPartyNumber","outpulsedCalledPartyNumber","origIpv4v6Addr","destIpv4v6Addr","origVideoCap_Codec_Channel2","origVideoCap_Bandwidth_Channel2","origVideoCap_Resolution_Channel2","origVideoTransportAddress_IP_Channel2","origVideoTransportAddress_Port_Channel2","origVideoChannel_Role_Channel2","destVideoCap_Codec_Channel2","destVideoCap_Bandwidth_Channel2","destVideoCap_Resolution_Channel2","destVideoTransportAddress_IP_Channel2","destVideoTransportAddress_Port_Channel2","destVideoChannel_Role_Channel2","IncomingProtocolID","IncomingProtocolCallRef","OutgoingProtocolID","OutgoingProtocolCallRef","currentRoutingReason","origRoutingReason","lastRedirectingRoutingReason","huntPilotPartition","huntPilotDN","calledPartyPatternUsage","IncomingICID","IncomingOrigIOI","IncomingTermIOI","OutgoingICID","OutgoingOrigIOI","OutgoingTermIOI","outpulsedOriginalCalledPartyNumber","outpulsedLastRedirectingNumber","wasCallQueued","totalWaitTimeInQueue","callingPartyNumber_uri","originalCalledPartyNumber_uri","finalCalledPartyNumber_uri","lastRedirectDn_uri","mobileCallingPartyNumber","finalMobileCalledPartyNumber","origMobileDeviceName","destMobileDeviceName","origMobileCallDuration","destMobileCallDuration","mobileCallType","originalCalledPartyPattern","finalCalledPartyPattern","lastRedirectingPartyPattern","huntPilotPattern","origDeviceType","destDeviceType"]
  }

  if "_dateparsefailure" in [tags] {
    drop{}
  }

  if "_dateparsefailure" in [tags] {
    drop{}
  }

  date {
      match => ["dateTimeOrigination", "UNIX"]
  }

  date {
      match => ["dateTimeOrigination", "UNIX"]
      target => "dateTimeOrigination_formatted"
  }

  date {
      match => ["dateTimeConnect", "UNIX"]
      target => "dateTimeConnect_formatted"
  }

  date {
      match => ["dateTimeDisconnect", "UNIX"]
      target => "dateTimeDisconnect_formatted"
  }

  translate {
      field => "destMediaCap_payloadCapability"
      destination => "destMediaCap_payloadCapability_text"
      dictionary_path => "/etc/logstash/translate/csv/cdr-codecs.csv"
  }

  translate {
      field => "destCause_value"
      destination => "destCause_value_text"
      dictionary_path => "/etc/logstash/translate/csv/cdr-cause-codes.csv"
  }

  translate {
      field => "origCause_value"
      destination => "origCause_value_text"
      dictionary_path => "/etc/logstash/translate/csv/cdr-cause-codes.csv"
  }
}

output {
  elasticsearch {
    hosts => "http://localhost:9200"
    index => "cdr"
  }

  stdout {
      codec => rubydebug
  }
}